---
on:
  workflow_call:
    inputs:
      add-paths:
        description: "Paths to "
        required: false
        type: string

      org:
        description: "The organisation for this"
        required: false
        default: "SUSE"
        type: string

      image-version:
        description: "The version of the image to use for the workflow"
        required: false
        default: "ubuntu-latest"
        type: string

    # secrets:
    #  deploy-key:
    #    description: "The deploy key for successful HTML builds"
    #    required: false
    #    type: string

jobs:
  debug:
    runs-on: ${{ inputs.image-version }}

    steps:
      - name: Print some context
        run: |
            echo image=${{ inputs.image-version }}
            echo repository=${{ github.repository }}
            echo action=${{ github.action }}

  select-dc-files:
    runs-on: ${{ inputs.image-version }}
    needs: debug
    outputs:
      validate-list: ${{ steps.select-dc-validate.outputs.dc-list }}
      build-list: ${{ steps.select-dc-build.outputs.dc-list }}
      allow-build: ${{ steps.select-dc-build.outputs.allow-build }}
      relevant-branches: ${{ steps.select-dc-build.outputs.relevant-branches }}

    steps:
      - uses: actions/checkout@v3

      - name: Checking basic soundness of DC files
        uses: openSUSE/doc-ci@gha-select-dcs
        with:
          mode: soundness

      - name: Selecting DC files to validate
        id: select-dc-validate
        uses: openSUSE/doc-ci@gha-select-dcs
        with:
          mode: list-validate

      - name: Selecting DC files to build
        id: select-dc-build
        uses: openSUSE/doc-ci@gha-select-dcs
        with:
          mode: list-build
          original-org: ${{ inputs.org }}

  validate:
    runs-on: ${{ inputs.image-version }}
    needs: select-dc-files
    strategy:
      # don't cancel all validation runners when one of them fails, we want full results
      fail-fast: false
      matrix:
        dc-files: ${{ fromJson(needs.select-dc-files.outputs.validate-list) }}
    steps:
      - uses: actions/checkout@v3
      - name: Validating DC file(s) ${{ matrix.dc-files }}
        uses: openSUSE/doc-ci@gha-validate
        with:
          dc-files: ${{ matrix.dc-files }}

  build-html:
    runs-on: ${{ inputs.image-version }}
    needs: [select-dc-files, validate]
    if: ${{ needs.select-dc-files.outputs.allow-build == 'true' }}
    outputs:
      artifact-name: ${{ steps.build-dc.outputs.artifact-name }}
      artifact-dir: ${{ steps.build-dc.outputs.artifact-dir }}
    strategy:
      matrix:
        dc-files: ${{ fromJson(needs.select-dc-files.outputs.build-list) }}
    steps:
      - uses: actions/checkout@v3
      - name: Building DC file(s) ${{ matrix.dc-files }}
        id: build-dc
        uses: openSUSE/doc-ci@gha-build
        with:
          dc-files: ${{ matrix.dc-files }}
      - name: Uploading builds as artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.build-dc.outputs.artifact-name }}
          path: ${{ steps.build-dc.outputs.artifact-dir }}/*
          retention-days: 3

